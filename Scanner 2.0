<!DOCTYPE html>
<html>
<head>
  <title>QR Code Scanner</title>
  <script src="https://unpkg.com/html5-qrcode"></script>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <style>
    body {
      font-family: sans-serif;
      text-align: center;
      padding: 20px;
    }
    #reader {
      width: 100%;
      max-width: 300px;
      margin: auto;
    }
    #result {
      margin-top: 20px;
      font-size: 1.2em;
      color: green;
      white-space: pre-wrap;
    }
  </style>
</head>
<body>
  <h2>Scan a QR Code</h2>
  <div id="reader"></div>
  <div id="result">Awaiting scan...</div>

  <script>
    const WEB_APP_URL = "https://qr-proxy.tdogacosta98.workers.dev/";
    const SPREADSHEET_ID = "1Sji7MWbmzF46Kz9Z6zfdOT15W1Djd8zwO2PdzHDBx8Y";

    const resultElem = document.getElementById("result");
    const html5QrCode = new Html5Qrcode("reader");

    let scanning = false;

    function startScanner() {
      html5QrCode.start(
        { facingMode: "environment" },
        { fps: 10, qrbox: 250 },
        async (decodedText, decodedResult) => {
          if (scanning) return; // prevent multiple triggers
          scanning = true;

          resultElem.innerText = "Scanned: " + decodedText;
          await html5QrCode.stop();

          sendToSheet(decodedText).then(() => {
            setTimeout(() => {
              resultElem.innerText = "Awaiting scan...";
              scanning = false;
              startScanner();
            }, 1000); // wait a second before scanning again
          });
        }
      ).catch(err => {
        resultElem.innerText = "Camera start error: " + err;
      });
    }

    async function sendToSheet(qrData) {
      try {
        const response = await fetch(WEB_APP_URL, {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({
            spreadsheetId: SPREADSHEET_ID,
            scannedValue: qrData
          })
        });

        const result = await response.text();
        resultElem.innerText += "\nResult: " + result;
      } catch (err) {
        resultElem.innerText += "\nError: " + err;
      }
    }

    // Start scanning on page load
    startScanner();
  </script>
</body>
</html>
